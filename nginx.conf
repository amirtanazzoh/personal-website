events {}

http {

    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name "amirtanazzoh.local";

        ssl_certificate /certs/amirtanazzoh.local.pem;
        ssl_certificate_key /certs/amirtanazzoh.local-key.pem;


        #Proxy minio requests
        location /apps/minio/ {
            rewrite ^/apps/minio/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;

            # To support websockets in MinIO versions released after January 2023
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
            # Uncomment the following line to set the Origin request to an empty string
            proxy_set_header Origin '';

            chunked_transfer_encoding off;
            proxy_pass http://minio:9001;
        }

        #Proxy adminer requests
        location /apps/adminer/ {
            rewrite ^/apps/adminer/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://adminer:8080/;

            auth_basic           "Administrator's Area";
            auth_basic_user_file /conf/.htpasswd;
        }

        #Proxy websocket
        location /api/ws {
            proxy_pass         http://backend:8000;
            proxy_http_version 1.1;

            # WebSocket magic
            proxy_set_header   Upgrade    $http_upgrade;
            proxy_set_header   Connection "upgrade";

            # Forward client details
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

            # Long-lived connection, so be generous
            proxy_read_timeout 60m;
        }

        # Proxy backend requests
        location /api/v1/ {
            proxy_pass http://backend:3000/api/v1/;
        }

        # Proxy frontend log requests
        location /api/error-logs {
            proxy_pass http://frontend:3000/api/error-logs/;
        }

        # Proxy all Next.js requests to the dev server
        location /_next/ {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }

        location /static/ {
            proxy_pass http://frontend:3000;
        }

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }
    }
}