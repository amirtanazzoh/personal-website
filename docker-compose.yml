services:
  db:
    image: postgres:latest
    container_name: postgres_db
    env_file:
      - .env
    volumes:
      - ./database:/var/lib/postgresql/data
    restart: always
    networks:
      - website-network

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - website-network

  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:8080/apps/minio
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - website-network

  backend:
    build: './back-end'
    container_name: backend
    env_file:
      - ./back-end/.env
    environment:
      - POSTGRES_HOST=db
      - MINIO_ENDPOINT=minio
    
    #Start Develop Section
    develop:
      watch:
        - action: sync+restart
          path: ./back-end
          target: /app
    command: npm run start
    #End Develop Section

    networks:
      - website-network

  frontend:
    build: './front-end'
    container_name: frontend
    env_file:
      - ./front-end/.env
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3000/api/v1
    
    #Start Develop Section
    develop:
      watch:
        - action: sync+restart
          path: ./front-end
          target: /app
    command: npm run dev
    #End Develop Section

    networks:
      - website-network
  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports: 
     - 127.4.4.1:80:80
     - 127.4.4.1:443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/certs
      - ./.htpasswd:/conf/.htpasswd
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    networks:
      - website-network
  
networks:
  website-network:
